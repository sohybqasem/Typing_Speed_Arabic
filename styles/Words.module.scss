.wordsWrapper {
  flex-shrink: 1;
  flex-grow: 1;
  outline: none;
  overflow: hidden;
  display: flex;
  justify-content: center;
  position: relative;
  margin-bottom: 40px;
  max-height: 10em;
  line-height: 1.3;
  margin-top: 150px;
  z-index: 1;

  // only fade bottom
  -webkit-mask-image: -webkit-linear-gradient(
    bottom,
    transparent 1.5em,
    black,
    black calc(100% - 1.5em),
    black
  );

  font-size: 40px;

  @media (max-width: 1600px) {
    font-size: 34px;
  }

  @media (max-width: 1400px) {
    font-size: 30px;
  }

  @media (max-width: 1200px) {
    font-size: 24px;
    max-height: 12em;
  }

  @media (max-width: 600px) {
    font-size: 20px;
  }
}

// .text {
//   font-size:3em;
//   width:300px;
//   color:white;
//   background: grey;
// }

.arabic {
  direction: rtl;
}

// fade both top and bottom when typing is started so that if scrolling is not done properly
// the text is not cut off at the top
:global(body.typing) .wordsWrapper {
  -webkit-mask-image: -webkit-linear-gradient(
    bottom,
    transparent 1.5em,
    black,
    black calc(100% - 1.5em),
    transparent
  );
}

.wordsScroll {
  position: relative;
  overflow: hidden;
}

.words {
  --top-offset: 2em;
  // max-width: 50ch;
  text-align: center;
  will-change: transform;
  transform: translateY(calc(var(--depth, 0px) + var(--top-offset)));
  transition: transform 500ms ease;
}

.word {
  margin-bottom: 10px;
  display: inline-flex;
}

.character {
  padding: 0.03em;
  display: block;
  color: var(--secondary);
  --icon: transparent;

  // space
  svg {
    transform: translateY(30%);
    width: 0.6em;
    height: 0.6em;
  }

  &.error {
    color: var(--error);
    --icon: var(--error);
    text-shadow: 0 0 0.5em var(--error);
  }

  &.current {
    animation: cursor 500ms ease infinite;
  }

  &.error.current {
    animation: cursor-error 200ms ease infinite;
  }
}

// active word character
.word.current .character:not(.error) {
  color: var(--primary);
}

// typed character
.word.typed .character:not(.error) {
  color: var(--tertiary);
}

.word.next .character {
  color: var(--next-word);
}

@keyframes cursor {
  0%,
  60% {
    background: var(--primary);
    color: var(--bg);
  }
  70%,
  100% {
    background: var(--bg);
    color: var(--primary);
  }
}

@keyframes cursor-error {
  0%,
  60% {
    background: var(--error);
    color: var(--bg);
  }
  70%,
  100% {
    background: var(--bg);
    color: var(--error);
  }
}
